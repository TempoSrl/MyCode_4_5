<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhQABAAIQAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgLsGDOGOkM5KT/HLy8owNcQaIeqqrthr
        bcQMFPz7++ShovTb3dx7fdRZW8w+QOy2uMDAwP8AAAD/AP//AAAA//8A/wD//////yH/C05FVFNDQVBF
        Mi4wAwEBAAAh+QQBAAAcACwAAAAAQABAAAAI/wA5CBxIsODADAgTKlzIsKHBhxAjFrTQsKLFhRIzamSA
        MILHjyBDigyZUKNJgxwzjFzJEmTJkycTfrxIU6bHlzAl2oxQs6fKmwhzRtzp0+fMoEILEi1qFGiGpAc7
        OmXa8+jTpEupFrUqNKvWrU5hev0KlifSjGPJlsUJMa3atWcNun0L96pSqWbpquVKcK5epnw5+P0LOOxg
        woXz4kWM2OpPxoynToVMV7Jiym8tY/6reSGDlHQ/71Xs1EICCRcuSEjwICGD0wliyz5NQaECCqgvOGAN
        GuHs2a2lKgRqYcHI2hkUtMxbYcJICaAtsETeWUKECbtPO897GrVH7BJ2I/+U7lG1do8SEpJXHf6C8wkV
        HttE6CBCAoXkgyu8YJ+h8f7q/YccA5MlgJ58wmVQnwO9UZAAcq7xdx9+HjnAkAXOLYAQgRH09oBH91X3
        HQW9McSAhAsZGAFFDBk4wYYeNQgigvI9sN1HC0C4EIoK/VeRixzlZ4ECt20XIml5KfAfSC8yxGNCPjbk
        IkXkjTRhZ7bx99EFDNU3IZSTJQRkBlWG9CWWJTYXppcpesRim01ySAGRJdJ4k4vx7bcmgAkpF0F6CymQ
        4XhuWqSZmhf0tl2XfCZkJH4CEtqhoUgipOUCq0nwH6AKWfdln1tmup2GktY536nFjcQlo58mZONIDryj
        SZ6pCdbKAAXuXecAiQ3hmidDCiSQ6wQS6LehA6tWhOWGFVSgQGjNPvvVspuRRW21Wl2LbWHDhbltVZM5
        9m1NXB027mJnmfttYAKpWy27Uf102bnysnVXvfSia1db+o4LL7/4rhtWTP1u9i9aBUN2sEbuZjswVA3X
        BVVfCWf28MTtVjztxRhnHPBoeXX80E7LlcyxyPGabLK9KFPMWMs6IZZUQAA7
</value>
  </data>
</root>